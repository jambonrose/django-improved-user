[tox]
envlist =
       py37-django21-lint,
       py37-django21-pylint,
       py37-django21-pkgcheck,
       py35-docs,
       py34-django{18,111,20}-unit
       py35-django{18,111,20,21,master}-unit
       py36-django{111,20,21,master}-unit,
       py37-django{20,21,master}-unit,
       py34-django{18,111,20}-{extension,integration,replacement}
       py35-django{18,111,20,21,master}-{extension,integration,replacement}
       py36-django{111,20,21,master}-{extension,integration,replacement},
       py37-django{20,21,master}-{extension,integration,replacement},

[testenv]
changedir =
    docs: docs
    extension: example_extension_project
    integration: example_integration_project
    replacement: example_replacement_project
    unit: {toxinidir}
skip_install =
    {fixme,lint,pkgcheck,pylint}: true
extras =
    {extension,fixme,integration,pylint,replacement,unit}: factory
setenv =
    PYTHONDONTWRITEBYTECODE=1
    {extension,integration,replacement,unit}: PYTHONWARNINGS=once
deps =
    {extension,fixme,integration,lint,pkgcheck,pylint,replacement,unit}: -r{toxinidir}/requirements.txt
    docs: -r{toxinidir}/doc-requirements.txt
    {extension,fixme,pylint}: -r{toxinidir}/example_extension_project/requirements.txt
    {fixme,integration,pylint}: -r{toxinidir}/example_integration_project/requirements.txt
    {fixme,pylint,replacement}: -r{toxinidir}/example_replacement_project/requirements.txt
    django18: Django>=1.8,<1.9
    django111: Django>=1.11,<2.0
    django20: Django>=2.0,<2.1
    django21: Django>=2.1,<2.2
    djangomaster: https://github.com/django/django/archive/master.tar.gz
commands =
    docs: sphinx-build -W -b html -d {envtmpdir}/doctrees .  {envtmpdir}/html
    {extension,integration,replacement}: coverage erase
    {extension,integration,replacement}: coverage run manage.py test {posargs}
    {extension,integration,replacement}: coverage combine --append
    {extension,integration,replacement}: coverage report
    lint: flake8 src tests setup.py runtests.py example_extension_project example_integration_project example_extension_project
    lint: isort --verbose --check-only --diff --recursive src tests setup.py runtests.py example_extension_project example_integration_project example_replacement_project
    pkgcheck: ./setup.py check --strict --metadata --restructuredtext
    pkgcheck: check-manifest {toxinidir}
    # example_*_project/manage.py example_*_project/config example_*_project/user_*
    pylint: pylint -d duplicate-code -d fixme src tests setup.py runtests.py example_extension_project/manage.py example_integration_project/manage.py example_replacement_project/manage.py example_extension_project/config example_integration_project/config example_replacement_project/config example_extension_project/user_extension example_integration_project/user_integration example_replacement_project/user_replacement 
    fixme: pylint src tests setup.py runtests.py example_extension_project/manage.py example_integration_project/manage.py example_replacement_project/manage.py example_extension_project/config example_integration_project/config example_replacement_project/config example_extension_project/user_extension example_integration_project/user_integration example_replacement_project/user_replacement 
    unit: coverage erase
    unit: coverage run runtests.py {posargs}
    unit: coverage combine --append
    unit: coverage report
